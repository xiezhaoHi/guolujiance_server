//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace RTMC.Source
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SystemContext : DbContext
    {
        public SystemContext()
            : base("name=SystemContext")
        {
            this.Configuration.LazyLoadingEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<SYS_Authorities> SYS_Authorities { get; set; }
        public virtual DbSet<SYS_Menus> SYS_Menus { get; set; }
        public virtual DbSet<SYS_Organization> SYS_Organization { get; set; }
        public virtual DbSet<SYS_Role2Permission> SYS_Role2Permission { get; set; }
        public virtual DbSet<SYS_Roles> SYS_Roles { get; set; }
        public virtual DbSet<SYS_Users> SYS_Users { get; set; }
        public virtual DbSet<ViewMenu> ViewMenu { get; set; }
        public virtual DbSet<AlarmRecord> AlarmRecord { get; set; }
        public virtual DbSet<ViewDeviceAlarm> ViewDeviceAlarm { get; set; }
        public virtual DbSet<Boiler> Boiler { get; set; }
        public virtual DbSet<BaseCode> BaseCode { get; set; }
        public virtual DbSet<Device> Device { get; set; }
    
        public virtual int sql_DeviceData(ObjectParameter str)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sql_DeviceData", str);
        }
    
        public virtual int sql_DeviceDataById(string deviceId, ObjectParameter str)
        {
            var deviceIdParameter = deviceId != null ?
                new ObjectParameter("DeviceId", deviceId) :
                new ObjectParameter("DeviceId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sql_DeviceDataById", deviceIdParameter, str);
        }
    
        public virtual int sql_DeviceDataByIdFirst(string deviceId, ObjectParameter str)
        {
            var deviceIdParameter = deviceId != null ?
                new ObjectParameter("DeviceId", deviceId) :
                new ObjectParameter("DeviceId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sql_DeviceDataByIdFirst", deviceIdParameter, str);
        }
    
        public virtual int sql_DeviceDataByIdAverage(string deviceId, ObjectParameter str)
        {
            var deviceIdParameter = deviceId != null ?
                new ObjectParameter("DeviceId", deviceId) :
                new ObjectParameter("DeviceId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sql_DeviceDataByIdAverage", deviceIdParameter, str);
        }
    
        public virtual int sql_DeviceDataTop(ObjectParameter str)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sql_DeviceDataTop", str);
        }
    
        public virtual int sql_DeviceDataTable(string tableName)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sql_DeviceDataTable", tableNameParameter);
        }
    
        public virtual int sql_DeviceDataByIdFirstXiangxi(string deviceId, ObjectParameter str)
        {
            var deviceIdParameter = deviceId != null ?
                new ObjectParameter("DeviceId", deviceId) :
                new ObjectParameter("DeviceId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sql_DeviceDataByIdFirstXiangxi", deviceIdParameter, str);
        }
    
        public virtual int sql_DeviceDataHistorical(string id, ObjectParameter str)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sql_DeviceDataHistorical", idParameter, str);
        }
    }
}
